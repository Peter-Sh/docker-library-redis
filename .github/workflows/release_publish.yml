# This workflow publishes a release by creating a version tag.
# It is intended to be run with workflow_dispatch event by the automation.

on:
  workflow_dispatch:
    inputs:
      release_handle:
        description: 'Release handle JSON string containing release information'
        required: true
        type: string
      workflow_uuid:
        description: 'Optional UUID to identify this workflow run'
        required: false

# UUID is used to help automation to identify workflow run in the list of workflow runs.
run-name: "Release Publish${{ github.event.inputs.workflow_uuid && format(': {0}', github.event.inputs.workflow_uuid) || '' }}"

jobs:
  publish-release:
    runs-on: ["ubuntu-latest"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Parse release handle and validate
        id: parse-release
        shell: bash
        run: |
          # Parse the JSON input
          RELEASE_HANDLE='${{ github.event.inputs.release_handle }}'
          echo "Parsing release handle JSON:"
          echo "$RELEASE_HANDLE" | jq .

          # Extract release_commit_sha
          RELEASE_COMMIT_SHA=$(echo "$RELEASE_HANDLE" | jq -r '.release_commit_sha // empty')

          # Validate that release_commit_sha exists and is not empty
          if [ -z "$RELEASE_COMMIT_SHA" ] || [ "$RELEASE_COMMIT_SHA" = "null" ]; then
            echo "Error: release_commit_sha is missing or empty in release_handle"
            echo "Release handle content: $RELEASE_HANDLE"
            exit 1
          fi

          # Extract release_version for tag creation
          RELEASE_VERSION=$(echo "$RELEASE_HANDLE" | jq -r '.release_version // empty')

          if [ -z "$RELEASE_VERSION" ] || [ "$RELEASE_VERSION" = "null" ]; then
            echo "Error: release_version is missing or empty in release_handle"
            echo "Release handle content: $RELEASE_HANDLE"
            exit 1
          fi

          echo "Successfully parsed release handle:"
          echo "  release_commit_sha: $RELEASE_COMMIT_SHA"
          echo "  release_version: $RELEASE_VERSION"

          # Set outputs for next steps
          echo "release_commit_sha=$RELEASE_COMMIT_SHA" >> $GITHUB_OUTPUT
          echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT

      - name: Create version tag
        uses: redis/redis-oss-release-automation/.github/actions/create-tag-verified@main
        with:
          tag: v${{ steps.parse-release.outputs.release_version }}
          ref: ${{ steps.parse-release.outputs.release_commit_sha }}
          gh_token: ${{ secrets.GITHUB_TOKEN }}
