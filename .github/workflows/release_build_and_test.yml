# This workflow is a part of release automation process.
# It is intended to be run with workflow_dispatch event by the automation.

# Warning: Workflow does switch branches and this may lead to confusion when changing workflow actions.
# The usual safety rule is to make changes to workflow or actions in base branch (e.g, release/8.X)
# Version branches (e.g, 8.0.10-rc5-int8) will merge changes from base branch automatically.
on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to build'
        required: true
      workflow_uuid:
        description: 'Optional UUID to identify this workflow run'
        required: false

# UUID is used to help automation to identify workflow run in the list of workflow runs.
run-name: "Release Build and Test${{ github.event.inputs.workflow_uuid && format(': {0}', github.event.inputs.workflow_uuid) || '' }}"

jobs:
  prepare-release:
    runs-on: ["ubuntu-latest"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Test Release Automation Docker Image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e GITHUB_TOKEN="${GITHUB_TOKEN}" \
            -e GITHUB_ACTOR="${{ github.actor }}" \
            -e GITHUB_REPOSITORY="${{ github.repository }}" \
            --entrypoint /bin/bash\
            $(echo "ghcr.io/${{ github.repository }}/release-automation:latest" | tr '[:upper:]' '[:lower:]')\
            -c 'cat .git/config; set -x; git config --global --add safe.directory /workspace; git remote -v; git ls-remote --refs --tags origin refs/tags/v8.*'

          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e GITHUB_TOKEN="${GITHUB_TOKEN}" \
            -e GITHUB_ACTOR="${{ github.actor }}" \
            -e GITHUB_REPOSITORY="${{ github.repository }}" \
            $(echo "ghcr.io/${{ github.repository }}/release-automation:latest" | tr '[:upper:]' '[:lower:]')\
            generate 8

      - name: Validate Redis Release Archive
        uses: redis/redis-oss-release-automation/.github/actions/validate-redis-release-archive@main
        with:
          release_tag: ${{ github.event.inputs.release_tag }}

      - name: Ensure Release Branch
        id: ensure-branch
        uses: redis/redis-oss-release-automation/.github/actions/ensure-release-branch@main
        with:
          release_tag: ${{ github.event.inputs.release_tag }}
          allow_modify: true
          gh_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Apply Docker Version
        id: apply-version
        uses: ./.github/actions/apply-docker-version
        with:
          release_tag: ${{ github.event.inputs.release_tag }}
          release_version_branch: ${{ steps.ensure-branch.outputs.release_version_branch }}

  build-and-test:
    needs: prepare-release
    uses: ./.github/workflows/pre-merge.yml
    secrets: inherit
    with:
      release_tag: ${{ github.event.inputs.release_tag }}


  merge-back-to-release-branch:
    needs: [prepare-release, build-and-test]
    if: success()
    runs-on: ["ubuntu-latest"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure Release Branch
        id: ensure-branch
        uses: redis/redis-oss-release-automation/.github/actions/ensure-release-branch@main
        with:
          release_tag: ${{ github.event.inputs.release_tag }}
          allow_modify: false
          gh_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge back to release branch
        uses: redis/redis-oss-release-automation/.github/actions/merge-branches-verified@main
        with:
          from_branch: ${{ steps.ensure-branch.outputs.release_version_branch }}
          to_branch: ${{ steps.ensure-branch.outputs.release_branch }}
          gh_token: ${{ secrets.GITHUB_TOKEN }}